version: "3.8"

volumes:
    node_modules_app1:
    node_modules_app2:

services:
  app1:
    build:
      context: ./
    volumes:
      - ./:/app/:delegated
#      - ./yarn.lock:/app/yarn.lock
#      - ./data/app1_dist:/app/dist
      - ../particl-market-data/app1:/app/data:delegated
      - node_modules_app1:/app/node_modules
#      - type: bind
#        source: ./
#        target: /app
#      - type: bind
#        source: ../particl-market-data/app1/
#        target: /app/data
#      - type: bind
#        source: ../particl-market-data/app1_node_modules/
#        target: /app/node_modules
    ports:
      - 3100:3100
    command: bin/entrypoint.sh
    links:
      - particld1
    depends_on:
      - particld1
    env_file:
      - .env.docker-compose.app1
    environment:
      - NODE_ENV=development
      - APP_PORT=3100
      - RPCUSER=test
      - RPCPASSWORD=test
      - RPCHOSTNAME=particld1
      - ZMQ_PORT=54235
      - MAINNET_PORT=51738
      - TESTNET_PORT=51935
      - STANDALONE=true
    cpus: '1.00'
    mem_limit: '800M'

  app2:
    build:
      context: ./
    volumes:
      - ./:/app/:delegated
#      - ./yarn.lock:/app/yarn.lock
#      - ./data/app2_dist:/app/dist
      - ../particl-market-data/app2:/app/data:delegated
      - node_modules_app2:/app/node_modules
#      - type: bind
#        source: ./
#        target: /app
#      - type: bind
#        source: ../particl-market-data/app2/
#        target: /app/data
#      - type: bind
#        source: ../particl-market-data/app2_node_modules/
#        target: /app/node_modules

    ports:
      - 3200:3200
    command: bin/entrypoint.sh
    links:
      - particld2
    depends_on:
      - particld2
    env_file:
      - .env.docker-compose.app2
    environment:
      - NODE_ENV=development
      - APP_PORT=3200
      - RPCUSER=test
      - RPCPASSWORD=test
      - RPCHOSTNAME=particld2
      - MAINNET_PORT=51738
      - TESTNET_PORT=51935
      - STANDALONE=true
    cpus: '1.00'
    mem_limit: '800M'

#  gui1:
#    image: market-gui
#    build:
#      context: ../particl-desktop
#      dockerfile: Dockerfile
#    volumes:
#      - ../particl-desktop/:/app/:delegated
#      - ./data/gui1_node_modules:/app/node_modules:delegated
#    ports:
#      - 4300:4200
#    command: bin/entrypoint.sh
#    links:
#      - app1
#      - particld1
#    depends_on:
#      - app1
#      - particld1
#    environment:
#      - NODE_ENV=development
#      - GUI_ENV=docker1
#      - PORT=4200

#  gui2:
#    image: market-gui
#    build:
#     context: ../particl-desktop
#     dockerfile: Dockerfile
#    volumes:
#      - ../particl-desktop/:/app/:delegated
#      - ./data/gui2_node_modules:/app/node_modules:delegated
#    ports:
#      - 4400:4200
#    command: bin/entrypoint.sh
#    links:
#      - app2
#      - particld2
#    depends_on:
#      - app2
#      - particld2
#    environment:
#      - NODE_ENV=development
#      - GUI_ENV=docker2
#      - PORT=4200

  particld1:
    image: ludx/particl:0.19.1.1
    volumes:
      - type: bind
        source: ../particl-market-data/particl1
        target: /root/.particl
    ports:
      - 52935:51935
      - 52936:51936
      - 52938:51938
#    command: entrypoint.sh particld -reindex-chainstate
    environment:
      - CONF_TESTNET=1                 # Use the test chain
      - CONF_RPCUSERNAME=test           # Username for JSON-RPC connections, generated unless set
      - CONF_RPCPASSWORD=test           # Password for JSON-RPC connections, generated unless set
#      - CONF_RPCPORT=52935
      - CONF_PRINTTOCONSOLE=0           # Send trace/debug info to console instead of debug.log file
#      - CONF_ONLYNET=onion              # Only connect to nodes in network: ipv4, ipv6 or onion
#      - CONF_PROXY=127.0.0.1:9050       # Connect through SOCKS5 proxy
#      - CONF_ONION=127.0.0.1:9050       # Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: -proxy)
      - CONF_SERVER=1                   # Accept command line and JSON-RPC commands
#      - CONF_RPCALLOWIP=*
      - CONF_RPCALLOWIP=0.0.0.0/0       # Allow JSON-RPC connections from specified source. Valid for <ip> are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24).
#      - CONF_REST=0                    # Accept public REST requests (default: 0)
      - CONF_LISTEN=1                   # Accept connections from outside (default: 1 if no -proxy or -connect)
#      - CONF_LISTENONION=1              # Automatically create Tor hidden service (default: 1)
#      - CONF_TORCONTROL=127.0.0.1:9051  # Tor control port to use if onion listening enabled (default: 127.0.0.1:9051)
#      - CONF_TORPASSWORD=particltor     # Tor control port password, generated unless set
#      - CONF_DISCOVER=1                # Discover own IP address (default: 1 when listening and no -externalip)
#      - CONF_BIND=127.0.0.1             # Bind to given address and always listen on it. Use [host]:port notation for IPv6
#      - CONF_DEBUG=tor                    # Output debugging information: 0/1, addrman, alert, bench, cmpctblock, coindb, db, http, libevent, lock, mempool, mempoolrej, net, proxy, prune, rand, reindex, rpc, selectcoins, tor, zmq, qt.
      - CREATEDEFAULTMASTERKEY=true
    cpus: '1.00'
    mem_limit: '600M'

  particld2:
    image: ludx/particl:0.19.1.1
    volumes:
#      - ./data/particl2:/root/.particl:cached
      - type: bind
        source: ../particl-market-data/particl2
        target: /root/.particl
    ports:
      - 53935:51935
      - 53936:51936
      - 53938:51938
#    command: entrypoint.sh particld -reindex-chainstate
    environment:
      - CONF_TESTNET=1                 # Use the test chain
      - CONF_RPCUSERNAME=test           # Username for JSON-RPC connections, generated unless set
      - CONF_RPCPASSWORD=test           # Password for JSON-RPC connections, generated unless set
      - CONF_PRINTTOCONSOLE=0           # Send trace/debug info to console instead of debug.log file
      - CONF_SERVER=1                   # Accept command line and JSON-RPC commands
      - CONF_RPCALLOWIP=0.0.0.0/0       # Allow JSON-RPC connections from specified source. Valid for <ip> are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24).
      - CONF_LISTEN=1                   # Accept connections from outside (default: 1 if no -proxy or -connect)
      - CREATEDEFAULTMASTERKEY=true
    cpus: '1.00'
    mem_limit: '600M'

